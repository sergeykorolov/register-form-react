{"version":3,"sources":["validation.js","App.jsx","index.js"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setDirty","valid","isEmpty","setEmpty","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","errorText","setErrorText","formValid","setFormValid","useEffect","validation","test","String","toLowerCase","useValidation","onChange","e","target","onBlur","App","name","isValidName","email","isEmail","phone","isValidPhone","language","setLanguage","isActiveLangMenu","setActiveLangMenu","isLangMenuDirty","setLangMenuDirty","conditions","setConditions","languageValid","onChangeLangMenuStatus","onChooseLanguage","innerText","className","onClick","action","href","type","placeholder","mask","classNames","active","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a451cc80.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst useValidation = (value, validations) => {\r\n\r\n    const [isEmpty, setEmpty] = useState(true);\r\n    const [nameError, setNameError] = useState(false);\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [phoneError, setPhoneError] = useState(false);\r\n    const [errorText, setErrorText] = useState('Поле не может быть пустым');\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true);\r\n                    break;\r\n                case 'isEmail':\r\n                    const reEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!reEmail.test(String(value).toLowerCase())) {\r\n                        setEmailError(true);\r\n                        setErrorText('Введено некорректное значение');\r\n                        if (!value) {\r\n                            setErrorText(\"Поле не может быть пустым\");\r\n                        }\r\n                    } else {\r\n                        setEmailError(false);\r\n                        setErrorText(\"\");\r\n                    }\r\n                    break;\r\n                case 'isValidPhone':\r\n                    const rePhone = /^\\+[0-9]\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/;\r\n                    if (!rePhone.test(String(value))) {\r\n                        setPhoneError(true);\r\n                        setErrorText('Введено некорректное значение');\r\n                        if (!value) {\r\n                            setErrorText(\"Поле не может быть пустым\");\r\n                        }\r\n                    } else {\r\n                        setPhoneError(false);\r\n                        setErrorText(\"\");\r\n                    }\r\n                    break;\r\n                case 'isValidName':\r\n                    const reName = /^[a-zа-я -]{3,16}$/;\r\n                    if (!reName.test(String(value).toLowerCase())) {\r\n                        setNameError(true);\r\n                        setErrorText('Введено некорректное значение');\r\n                        if (!value) {\r\n                            setErrorText('Поле не может быть пустым');\r\n                        }\r\n                    } else {\r\n                        setNameError(false);\r\n                        setErrorText(\"\");\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (isEmpty || emailError || phoneError || nameError) {\r\n            setFormValid(false);\r\n        } else {\r\n            setFormValid(true);\r\n        }\r\n    }, [isEmpty, emailError, phoneError, nameError]);\r\n\r\n    return {\r\n        isEmpty,\r\n        emailError,\r\n        phoneError,\r\n        nameError,\r\n        errorText,\r\n        formValid\r\n    }\r\n};\r\n\r\nconst useInput = (initialValue, validations) => {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n    const [isDirty, setDirty] = useState(false);\r\n    const valid = useValidation(value, validations);\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        setDirty(true);\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        isDirty,\r\n        ...valid\r\n    }\r\n};\r\n\r\nexport default useInput;","import './App.scss';\r\nimport React, {useState} from \"react\";\r\nimport classNames from 'classnames';\r\nimport InputMask from 'react-input-mask';\r\nimport useInput from \"./validation\";\r\n\r\nconst App = () => {\r\n\r\n    const name = useInput('', {isEmpty: true, isValidName: true});\r\n    const email = useInput('', {isEmpty: true, isEmail: true});\r\n    const phone = useInput('', {isEmpty: true, isValidPhone: true});\r\n\r\n    const [language, setLanguage] = useState(\"Язык\");\r\n    const [isActiveLangMenu, setActiveLangMenu] = useState(false);\r\n    const [isLangMenuDirty, setLangMenuDirty] = useState(false);\r\n    const [conditions, setConditions] = useState(false);\r\n    const languageValid = language !== \"Язык\";\r\n    const formValid = name.formValid && email.formValid && phone.formValid && languageValid && conditions;\r\n\r\n    const onChangeLangMenuStatus = () => {\r\n        setActiveLangMenu(!isActiveLangMenu);\r\n        setLangMenuDirty(true);\r\n    }\r\n\r\n    const onChooseLanguage = (e) => {\r\n        setLanguage(e.target.innerText);\r\n    }\r\n\r\n    const onConfirmConditions = () => {\r\n        setConditions(!conditions);\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\" onClick={isActiveLangMenu ? onChangeLangMenuStatus : null}>\r\n            <div className=\"form\">\r\n                <form className=\"form__body\" action=\"#\">\r\n                    <h1 className=\"form__title\">Регистрaция</h1>\r\n                    <div className=\"form__question\">Уже есть аккаунт? <a href=\"#\">Войти</a></div>\r\n                    <div className=\"form__item\">\r\n                        <label className=\"form__label\">\r\n                            <span>Имя</span>\r\n                            <input\r\n                                onChange={e => name.onChange(e)}\r\n                                onBlur={e => name.onBlur(e)}\r\n                                value={name.value}\r\n                                className=\"form__input\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                placeholder=\"Введите Ваше имя\"\r\n                            />\r\n                        </label>\r\n                        {(name.isDirty && name.nameError) && <div className=\"form__error\">{name.errorText}</div>}\r\n                    </div>\r\n                    <div className=\"form__item\">\r\n                        <label className=\"form__label\">\r\n                            <span>Email</span>\r\n                            <input\r\n                                onChange={e => email.onChange(e)}\r\n                                onBlur={e => email.onBlur(e)}\r\n                                value={email.value}\r\n                                className=\"form__input\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Введите ваш email\"\r\n                            />\r\n                        </label>\r\n                        {(email.isDirty && email.emailError) && <div className=\"form__error\">{email.errorText}</div>}\r\n                    </div>\r\n                    <div className=\"form__item\">\r\n                        <label className=\"form__label\">\r\n                            <span>Номер телефона</span>\r\n                            <InputMask\r\n                                mask=\"+9(999)999-99-99\"\r\n                                value={phone.value}\r\n                                className=\"form__input\"\r\n                                name=\"phone\"\r\n                                onChange={e => phone.onChange(e)}\r\n                                onBlur={e => phone.onBlur(e)}\r\n                                type=\"text\"\r\n                                placeholder=\"Введите номер телефона\"\r\n                            />\r\n                        </label>\r\n                        {(phone.isDirty && phone.phoneError) && <div className=\"form__error\">{phone.errorText}</div>}\r\n                    </div>\r\n                    <div className='form__item'>\r\n                        <div className=\"form__label\">Язык</div>\r\n                        <div className={classNames(\"menu\", {active: isActiveLangMenu})}\r\n                             onClick={onChangeLangMenuStatus}>\r\n                            <div className=\"menu__label\">{language}</div>\r\n                            <div className=\"menu__arrow\"></div>\r\n                            <ul className=\"menu__list\">\r\n                                <li className=\"menu__item\" onClick={e => onChooseLanguage(e)}>Русский</li>\r\n                                <li className=\"menu__item\" onClick={e => onChooseLanguage(e)}>Английский</li>\r\n                                <li className=\"menu__item\" onClick={e => onChooseLanguage(e)}>Китайский</li>\r\n                                <li className=\"menu__item\" onClick={e => onChooseLanguage(e)}>Испанский</li>\r\n                            </ul>\r\n                        </div>\r\n                        {(isLangMenuDirty && language === \"Язык\") &&\r\n                        <div className=\"form__error\">Нужно выбрать язык</div>}\r\n                    </div>\r\n                    <div className='form__item'>\r\n                        <div className=\"checkbox\">\r\n                            <label className=\"checkbox__label\" onChange={onConfirmConditions}>\r\n                                <input type=\"checkbox\" name=\"agreement\" className=\"checkbox__input\"/>\r\n                                <span className=\"checkbox__check\"></span>\r\n                                <span>Принимаю <a href=\"#\">условия</a> использования</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <button disabled={!formValid} className=\"form__button\" type=\"submit\">Зарегистрироваться</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}